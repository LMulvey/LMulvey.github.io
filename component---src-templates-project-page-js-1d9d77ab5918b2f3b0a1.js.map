{"version":3,"sources":["webpack:///./src/templates/project-page.js"],"names":["StatusBadge","styled","h6","_templateObject","_ref","status","TechBadge","_templateObject2","__webpack_exports__","_ref2","data","_data$markdownRemark","markdownRemark","_data$markdownRemark$","frontmatter","title","url","bannerurl","technologies","photos","html","site","resolvedStatus","resolveStatus","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","siteMetadata","react_grid_system__WEBPACK_IMPORTED_MODULE_4__","justify","align","map","tech","href","dangerouslySetInnerHTML","__html","nuka_carousel__WEBPACK_IMPORTED_MODULE_6__","renderCenterLeftControls","_ref3","previousSlide","CarouselButton","onClick","className","renderCenterRightControls","_ref4","nextSlide","alt","src","key","button","_templateObject3","querey"],"mappings":"qtCASA,IAAMA,EAAcC,IAAOC,GAAVC,IACK,SAAAC,GAAA,MACP,cADOA,EAAGC,OACI,cAAgB,YAUvCC,EAAYL,IAAOC,GAAVK,KAyBAC,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAAWC,EAOvBD,EALFE,eAFyBC,EAAAF,EAGvBG,YAAeC,EAHQF,EAGRE,MAAOV,EAHCQ,EAGDR,OAAQW,EAHPH,EAGOG,IAAKC,EAHZJ,EAGYI,UAAWC,EAHvBL,EAGuBK,aAAcC,EAHrCN,EAGqCM,OAC5DC,EAJuBT,EAIvBS,KAEFC,EACEX,EADFW,KAEIC,EApBc,SAAAjB,GACpB,OAAQA,GACN,IAAK,UACH,MAAO,UACT,IAAK,aACH,MAAO,cACT,IAAK,WACL,QACE,MAAO,aAYYkB,CAAclB,GAErC,OACEmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQV,MAAUA,EAAL,MAAgBM,EAAKQ,aAAad,QAC/CS,EAAAC,EAAAC,cAACI,EAAA,UAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,IAAD,CAAKC,QAAQ,UACXP,EAAAC,EAAAC,cAACI,EAAA,IAAD,KACEN,EAAAC,EAAAC,cAAA,UAAKX,KAGTS,EAAAC,EAAAC,cAACI,EAAA,IAAD,CAAKC,QAAQ,WACXP,EAAAC,EAAAC,cAACI,EAAA,IAAD,KACEN,EAAAC,EAAAC,cAAC1B,EAAD,CAAaK,OAAQA,GAASiB,IAGhCE,EAAAC,EAAAC,cAACI,EAAA,IAAD,CAAKE,MAAM,SACRd,EAAae,IAAI,SAAAC,GAAI,OACpBV,EAAAC,EAAAC,cAACpB,EAAD,KAAY4B,OAIlBV,EAAAC,EAAAC,cAACI,EAAA,IAAD,CAAKC,QAAQ,UACXP,EAAAC,EAAAC,cAACI,EAAA,IAAD,KACEN,EAAAC,EAAAC,cAAA,KAAGS,KAAMnB,GAAMA,GACfQ,EAAAC,EAAAC,cAAA,OAAKU,wBAAyB,CAAEC,OAAQjB,OAG5CI,EAAAC,EAAAC,cAACI,EAAA,IAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,IAAD,CAAKE,MAAM,UACTR,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,yBAA0B,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,cAAH,OACxBjB,EAAAC,EAAAC,cAACgB,EAAD,CAAgB3B,MAAM,iBAAiB4B,QAASF,GAC9CjB,EAAAC,EAAAC,cAAA,KAAGkB,UAAU,qCAGjBC,0BAA2B,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACzBvB,EAAAC,EAAAC,cAACgB,EAAD,CAAgB3B,MAAM,aAAa4B,QAASI,GAC1CvB,EAAAC,EAAAC,cAAA,KAAGkB,UAAU,uCAIjBpB,EAAAC,EAAAC,cAAA,OAAKsB,IAAKjC,EAAOkC,IAAKhC,IACrBE,EAAOc,IAAI,SAAAgB,GAAG,OACbzB,EAAAC,EAAAC,cAAA,OAAKwB,IAAKD,EAAKD,IAAKjC,EAAOkC,IAAKA,YAUhD,IAAMP,EAAiBzC,IAAOkD,OAAVC,KAqBPC,EAAM","file":"component---src-templates-project-page-js-1d9d77ab5918b2f3b0a1.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport { Container, Row, Col } from 'react-grid-system'\nimport styled from 'styled-components'\nimport Carousel from 'nuka-carousel'\n\nimport Layout from '../components/Layout'\n\nconst StatusBadge = styled.h6`\n  background-color: ${({ status }) =>\n    status === 'completed' ? 'springgreen' : '#BADA55'};\n  color: white;\n  font-weight: bold;\n  margin: 5px 0;\n  border-radius: 10px;\n  max-width: 100px;\n  padding: 5px;\n  text-align: center;\n`\n\nconst TechBadge = styled.h6`\n  background-color: #e74c3c;\n  color: white;\n  font-weight: bold;\n  margin: none;\n  border-radius: 10px;\n  max-width: 100px;\n  padding: 5px;\n  text-align: center;\n  display: inline-block;\n  margin: 5px;\n`\n\nconst resolveStatus = status => {\n  switch (status) {\n    case 'ongoing':\n      return 'Ongoing'\n    case 'inprogress':\n      return 'In Progress'\n    case 'complete':\n    default:\n      return 'Completed'\n  }\n}\n\nexport default ({ data }) => {\n  const {\n    markdownRemark: {\n      frontmatter: { title, status, url, bannerurl, technologies, photos },\n      html,\n    },\n    site,\n  } = data\n  const resolvedStatus = resolveStatus(status)\n\n  return (\n    <Layout>\n      <Helmet title={`${title} | ${site.siteMetadata.title}`} />\n      <Container>\n        <Row justify=\"center\">\n          <Col>\n            <h1>{title}</h1>\n          </Col>\n        </Row>\n        <Row justify=\"between\">\n          <Col>\n            <StatusBadge status={status}>{resolvedStatus}</StatusBadge>\n          </Col>\n\n          <Col align=\"right\">\n            {technologies.map(tech => (\n              <TechBadge>{tech}</TechBadge>\n            ))}\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col>\n            <a href={url}>{url}</a>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n          </Col>\n        </Row>\n        <Row>\n          <Col align=\"center\">\n            <Carousel\n              renderCenterLeftControls={({ previousSlide }) => (\n                <CarouselButton title=\"Previous slide\" onClick={previousSlide}>\n                  <i className=\"fas fa-angle-double-left fa-5x\" />\n                </CarouselButton>\n              )}\n              renderCenterRightControls={({ nextSlide }) => (\n                <CarouselButton title=\"Next slide\" onClick={nextSlide}>\n                  <i className=\"fas fa-angle-double-right fa-5x\" />\n                </CarouselButton>\n              )}\n            >\n              <img alt={title} src={bannerurl} />\n              {photos.map(src => (\n                <img key={src} alt={title} src={src} />\n              ))}\n            </Carousel>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n}\n\nconst CarouselButton = styled.button`\n  color: white;\n  padding: 0 5px;\n  background-color: rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  border: 0;\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n  transition: all 120ms ease-in-out;\n  transition-property: background, transform;\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgba(255, 255, 255, 0.15);\n    transform: scale(1.05);\n  }\n  &:active {\n    transform: scale(0.95);\n  }\n`\n\nexport const querey = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        url\n        bannerurl\n        status\n        technologies\n        photos\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}